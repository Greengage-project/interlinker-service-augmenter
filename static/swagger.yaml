openapi: 3.0.1

info:
  title: Annotator Interlinker
  description: 'This API allows to create Annotations of Public Services Descriptions'
  termsOfService: http://interlink-project.eu/terms/
  contact:
    email: d.silva@deusto.es
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: '1'

servers:
  - url: http://127.0.0.1:5000/
    description: Annotation made in a web document
tags:
- name: annotations
  description: Everything about your Annotations
 
paths:
  /annotations:
    get:
      tags:
        - annotations
      description: List all the annotations registered
      summary: List Annotations
      operationId: getAnnotations

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Annotation'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Annotation'
        '400':
          description: Invalid status value
      parameters:
        - in: query
          name: offset
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
    post:
      tags:
        - annotations
      summary: Add a new annotation to the database
      operationId: addAnnotation
      responses:
        '405':
          description: Invalid input
      requestBody:
        $ref: '#/components/requestBodies/Annotation'
    
  /annotations/{annotationId}:
    get:
      tags:
        - annotations
      summary: Find annotation by ID
      description: Returns a single annotation
      operationId: getAnnotationById
      parameters:
        - name: annotationId
          in: path
          description: ID of annotation to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotation'
            application/xml:
              schema:
                $ref: '#/components/schemas/Annotation'
        '400':
          description: Invalid ID supplied
        '404':
          description: Annotation not found

    delete:
      tags:
        - annotations
      summary: Deletes a annotation
      operationId: deleteAnnotation
      parameters:
        - name: annotationId
          in: path
          description: Annotation id to delete
          required: true
          schema:
            type: string

      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Annotation not found

    put:
      tags:
        - annotations
      summary: Updated an annotation.
      description: This can only be done by the logged in user.
      operationId: updateAnnotation
      parameters:
        - name: annotationId
          in: path
          description: name that need to be updated
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid annotation supplied
        '404':
          description: Annotation not found
      requestBody:
        $ref: '#/components/requestBodies/Annotation'
  /search:
    get:
      tags:
        - annotations
      summary: Find annotations that contain specific text.
      description: Returns a list of annotation
      operationId: searchAnnotationByText
      parameters:
        - name: text
          in: query
          description: Text included in the annotations to return.
          required: true
          schema:
            type: string
        - in: query
          name: offset
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotation'
            application/xml:
              schema:
                $ref: '#/components/schemas/Annotation'
        '400':
          description: Invalid ID supplied
        '404':
          description: Annotation not found
  /search_raw:
    get:
      tags:
        - annotations
      summary: Advanced search API -- direct access to ElasticSearch. Uses the same API as the ElasticSearch query endpoint.
      description: Returns a list of annotation
      operationId: searchAnnotationByText
      parameters:
        - name: text
          in: query
          description: Text included in the annotations to return.
          required: true
          schema:
            type: string
        - in: query
          name: offset
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotation'
            application/xml:
              schema:
                $ref: '#/components/schemas/Annotation'
        '400':
          description: Invalid ID supplied
        '404':
          description: Annotation not found


    
components:
  schemas:
    Annotation:
      type: object
      properties:
        section_title:
          type: string
        ranges:
          type: object
          properties:
            endOffset: 
                type: integer
            startOffset: 
                type: integer
            start: 
                type: string
            end:
                type: string
        created:
          type: string
          format: date-time
        section:
          type: string
        uri:
          type: string
        idAnotationReply:
          type: string
        idReplyRoot:
          type: string
        quote:
          type: string
        permissions:
          type: object
          properties:
            read:
                type: string
            update:
                type: string
            admin:
                type: string
            delete:
                type: string
        data_creacio:
          type: string
        text:
          type: string
        category:
          type: string
        user:
          type: string
        updated:
          type: string
          format: date-time
        consumer:
          type: string
        order:
          type: string
        id:
          type: string

  requestBodies:
    Annotation:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Annotation'
        application/xml:
          schema:
            $ref: '#/components/schemas/Annotation'
      description: Annotation object that needs to be added to the store
      required: true