version: '3.7'

services:

  # Elasticsearch Docker Images: https://www.docker.elastic.co/
  elasticsearch:
    image: elasticsearch:1.7.6-alpine
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - xpack.security.enabled=false
      - discovery.type=single-node
      - http.cors.enabled=true
      - http.cors.allow-origin=*
      - discovery.zen.ping.unicast.hosts=127.0.0.1

    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
      - elasticsearch-config:/usr/share/elasticsearch/config
    ports:
      - 9200:9200
      - 9300:9300

  augmenterservice:
    build: .
    restart: always
    container_name: augmenterservice
    ports:
      - 5000:5000
    env_file:
      - .env
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200 
      - SURVEYINTERLINK_URL=http://${DOMAIN}:${PORT_SURVEY}
      - HOSTAUGMENTER=0.0.0.0
      - PORTAUGMENTER=5000
      - REDIRECT_URI=http://${DOMAIN}/oidc_callback
      
    depends_on:
      - elasticsearch
      - survey

  survey:
    build:
      context: ./surveyapp
      dockerfile: Dockerfile
      target: dev
    container_name: survey
    ports:
      - "${PORT_SURVEY}:80"
    volumes:
      - ./surveyapp/app:/app
    env_file:
      - .env
    environment:
      - MODE=integrated
      - SERVICEPEDIA_URL=http://${DOMAIN}:${PORT_SERVICEPEDIA}
      - PROTOCOL=http://
      - SERVER_NAME=${DOMAIN?Variable not set}
      - PORT=80
      - BASE_PATH=
      - MONGODB_URL=mongodb://${MONGODB_USERNAME}:${MONGODB_PASSWORD}@mongodb:27017/${MONGODB_DATABASE}?retryWrites=true&w=majority
      - BACKEND_CORS_ORIGINS=["http://localhost","http://127.0.0.1","http://augmenterservice"]
      - SECRET_KEY=changethis
      - MONGODB_DATABASE=${MONGODB_DATABASE}
      - COLLECTION_NAME=survey_assets
      
  mongodb:
    image: bitnami/mongodb:latest
    container_name: survey-mongodb
    env_file:
      - .env
    healthcheck:
      test: echo 'db.runCommand({serverStatus:1}).ok' | mongo admin -u $MONGODB_ROOT_USER -p $MONGODB_ROOT_PASSWORD --quiet | grep 1
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 20s
    volumes:
      - mongodb-data:/data/db

volumes:
  elasticsearch-data:
    driver: local
  elasticsearch-config:
    driver: local
  mongodb-data:
    driver: local
